<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (C) 2012 The Android Open Source Project

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->

<!-- Phone app resources that may need to be customized
     for different hardware or product builds. -->
<resources>
    <!-- If this is true, the screen will fade off. -->
    <bool name="config_animateScreenLights">false</bool>

    <!-- Is the notification LED intrusive? Used to decide if there should be a disable option -->
    <bool name="config_intrusiveNotificationLed">false</bool>
    
    <!-- Is the battery LED intrusive? Used to decide if there should be a disable option -->
    <bool name="config_intrusiveBatteryLed">false</bool>
    
    <!-- Does the battery LED support multiple colors? Used to decide if the user can change the colors -->
    <bool name="config_multiColorBatteryLed">false</bool>

    <!-- Default color for notification LED. -->
    <color name="config_defaultNotificationColor">#00000002</color>

    <!-- Default value for led color when battery is low on charge -->
    <integer name="config_notificationsBatteryLowARGB">0x00000003</integer>

    <!-- Default value for led color when battery is medium charged -->
    <integer name="config_notificationsBatteryMediumARGB">0x00000003</integer>

    <!-- Default value for led color when battery is fully charged -->
    <integer name="config_notificationsBatteryFullARGB">0x00000005</integer>
    
    <!-- Default LED on time for notification LED in milliseconds. -->
    <integer name="config_defaultNotificationLedOn">500</integer>
    
    <!-- Default LED off time for notification LED in milliseconds. -->
    <integer name="config_defaultNotificationLedOff">2000</integer>
    
    <!-- Flag indicating whether the we should enable the automatic brightness in Settings.
        Software implementation will be used if config_hardware_auto_brightness_available is not set -->
    <bool name="config_automatic_brightness_available">true</bool>
    
    <!-- Vibrator pattern for feedback about a long screen/key press -->
    <integer-array name="config_longPressVibePattern">
        <item>0</item>
        <item>10</item>
        <item>20</item>
        <item>30</item>
    </integer-array>

    <!-- Vibrator pattern for feedback about touching a virtual key -->
    <integer-array name="config_virtualKeyVibePattern">
        <item>0</item>
        <item>10</item>
        <item>20</item>
        <item>30</item>
    </integer-array>

    <!-- Vibrator pattern for a very short but reliable vibration for soft keyboard tap -->
    <integer-array name="config_keyboardTapVibePattern">
        <item>40</item>
    </integer-array>
    
    <string-array name="networkAttributes" translatable="false">
        <item>wifi,1,1,1,-1,true</item>
        <item>mobile,0,0,0,-1,true</item>
        <item>mobile_mms,2,0,2,60000,true</item>
        <item>mobile_supl,3,0,2,60000,true</item>
        <item>mobile_dun,4,0,2,60000,true</item>
        <item>mobile_hipri,5,0,3,60000,true</item>
        <item>mobile_fota,10,0,2,60000,true</item>
        <item>mobile_ims,11,0,2,60000,true</item>
        <item>mobile_cbs,12,0,2,60000,true</item>
        <item>wifi_p2p,13,1,0,-1,true</item>
        <item>bluetooth,7,7,2,-1,true</item>
    </string-array>
    
    <!-- This string array should be overridden by the device to present a list of radio
        attributes.  This is used by the connectivity manager to decide which networks can coexist
        based on the hardware -->
    <!-- An Array of "[ConnectivityManager connectionType],
                     [# simultaneous connection types]"  -->
    <string-array name="radioAttributes" translatable="false">
        <item>1,1</item>
        <item>0,1</item>
        <item>7,1</item>
    </string-array>	
    
    <integer-array name="config_data_usage_network_types" translatable="false">
        <item>0</item>
        <item>1</item>
        <item>2</item>
        <item>3</item>
        <item>4</item>
        <item>5</item>
        <item>7</item>
        <item>10</item>
        <item>11</item>
        <item>12</item>
    </integer-array>
    
    <!-- Boolean indicating whether the wifi chipset has dual frequency band support -->
    <bool translatable="false" name="config_wifi_dual_band_support">true</bool>

    <!-- Boolean indicating whether the wifi chipset has background scan support -->
    <bool translatable="false" name="config_wifi_background_scan_support">true</bool>

    <!-- When true use the linux /dev/input/event subsystem to detect the switch changes
    on the headphone/microphone jack. When false use the older uevent framework -->
    <bool name="config_useDevInputEventForAudioJack">true</bool>

    <!-- Set to true if the wifi display supports compositing content stored
         in gralloc protected buffers.  For this to be true, there must exist
         a protected hardware path for surface flinger to composite and send
         protected buffers to the wifi display video encoder.

         If this flag is false, we advise applications not to use protected
         buffers (if possible) when presenting content to a wifi display because
         the content may be blanked.

         This flag controls whether the {@link Display#FLAG_SUPPORTS_PROTECTED_BUFFERS}
         flag is set for wifi displays.
    -->
    <bool name="config_wifiDisplaySupportsProtectedBuffers">true</bool>
    
    <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
         The N entries of this array define N + 1 control points as follows:
         (1-based arrays)

         Point 1:            (0, value[1]):             lux <= 0
         Point 2:     (level[1], value[2]):  0        < lux <= level[1]
         Point 3:     (level[2], value[3]):  level[2] < lux <= level[3]
         ...
         Point N+1: (level[N], value[N+1]):  level[N] < lux

         The control points must be strictly increasing.  Each control point
         corresponds to an entry in the brightness backlight values arrays.
         For example, if LUX == level[1] (first element of the levels array)
         then the brightness will be determined by value[2] (second element
         of the brightness values array).

         Spline interpolation is used to determine the auto-brightness
         backlight values for LUX levels between these control points.

         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>10</item>
        <item>50</item>
        <item>100</item>
        <item>200</item>
        <item>400</item>
        <item>500</item>
        <item>800</item>
        <item>1000</item>
        <item>1600</item>
        <item>3000</item>
    </integer-array>
    
    <!-- Array of output values for LCD backlight corresponding to the LUX values
        in the config_autoBrightnessLevels array.  This array should have size one greater
        than the size of the config_autoBrightnessLevels array.
        This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLcdBacklightValues">
        <item>14</item>   <!-- 0-10 -->
        <item>28</item>   <!-- 10-50 -->
        <item>37</item>   <!-- 50-100 -->
        <item>51</item>   <!-- 100-200 -->
        <item>71</item>   <!-- 200-400 -->
        <item>80</item>   <!-- 400-500 -->
        <item>96</item>   <!-- 500-800 -->
        <item>108</item>  <!-- 800-1000 -->
        <item>144</item>  <!-- 1000-1600 -->
        <item>181</item>  <!-- 1600-3000 -->
        <item>250</item>  <!-- 3000-10000 -->
    </integer-array>
    
    <!-- Array of output values for button backlight corresponding to the LUX values
        in the config_autoBrightnessLevels array.  This array should have size one greater
        than the size of the config_autoBrightnessLevels array.
        This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessButtonBacklightValues">
        <item>0</item>
        <item>1</item>
        <item>2</item>
        <item>3</item>
        <item>4</item>
        <item>5</item>
    </integer-array>
    
    <!-- Minimum screen brightness setting allowed by the power manager.
        The user is forbidden from setting the brightness below this level. -->
    <integer name="config_screenBrightnessSettingMinimum">10</integer>
    
    <!-- Maximum screen brightness allowed by the power manager.
        The user is forbidden from setting the brightness above this level. -->
    <integer name="config_screenBrightnessSettingMaximum">255</integer>
    
    <!-- Default screen brightness setting.
        Must be in the range specified by minimum and maximum. -->
    <integer name="config_screenBrightnessSettingDefault">102</integer>
    
    <!-- Screen brightness used to dim the screen when the user activity
        timeout expires.  May be less than the minimum allowed brightness setting
        that can be set by the user. -->
    <integer name="config_screenBrightnessDim">10</integer>
    
    <!-- The duration (in milliseconds) that the radio will scan for a signal
        when there's no network connection. If the scan doesn't timeout, use zero -->
    <integer name="config_radioScanningTimeout">9000</integer>
    
    <!-- This string array should be overridden by the device to present a list of network
        attributes.  This is used by the connectivity manager to decide which networks can coexist
        based on the hardware -->
    <!-- An Array of "[Connection name],[ConnectivityManager.TYPE_xxxx],
        [associated radio-type],[priority],[restoral-timer(ms)],[dependencyMet]  -->
    <!-- the 5th element "resore-time" indicates the number of milliseconds to delay
        before automatically restore the default connection.  Set -1 if the connection
        does not require auto-restore. -->
    <!-- the 6th element indicates boot-time dependency-met value. -->
    <!-- List of regexpressions describing the interface (if any) that represent tetherable
        USB interfaces.  If the device doesn't want to support tething over USB this should
        be empty.  An example would be "usb.*" -->
    <string-array name="config_tether_usb_regexs" translatable="false">
        <item>usb\\d</item>
        <item>rndis\\d</item>
    </string-array>
    
    <!-- List of regexpressions describing the interface (if any) that represent tetherable
        Wifi interfaces.  If the device doesn't want to support tethering over Wifi this
        should be empty.  An example would be "softap.*" -->
    <string-array name="config_tether_wifi_regexs" translatable="false">
        <item>wlan0</item>
    </string-array>
    
    <!-- List of regexpressions describing the interface (if any) that represent tetherable
        bluetooth interfaces.  If the device doesn't want to support tethering over bluetooth this
        should be empty. -->
    <string-array name="config_tether_bluetooth_regexs" translatable="false">
       <item>bnep\\d</item>
    </string-array>	
    
    <!-- Array of allowable ConnectivityManager network types for tethering -->
    <!-- Common options are [1, 4] for TYPE_WIFI and TYPE_MOBILE_DUN or
        [0,1,5,7] for TYPE_MOBILE, TYPE_WIFI, TYPE_MOBILE_HIPRI and TYPE_BLUETOOTH -->
    <integer-array translatable="false" name="config_tether_upstream_types">
        <item>0</item>
        <item>1</item>
        <item>5</item>
        <item>7</item>
    </integer-array>
    
    <!-- Hardware 'face' keys present on the device, stored as a bit field.
        This integer should equal the sum of the corresponding value for each
        of the following keys present:
            1 - Home
            2 - Back
            4 - Menu
            8 - Assistant (search)
           16 - App switch
        For example, a device with Home, Back and Menu keys would set this
        config to 7. -->
    <integer name="config_deviceHardwareKeys">7</integer>    

    <bool name="config_enableWifiDisplay">true</bool>

    <!-- Flag indicating if the speed up audio on mt call code should be executed -->
    <bool name="config_speed_up_audio_on_mt_calls">true</bool>

    <!-- Flag indicating if the speed up audio on mt call code should be executed -->
    <bool name="config_speed_up_audio_on_mt_calls">true</bool>

</resources>
